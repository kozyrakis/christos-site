@inproceedings{2016-generate-asplos,
 abstract = {In recent years the computing landscape has seen an increasing shift towards specialized accelerators. Field programmable gate arrays (FPGAs) are particularly promising for the implementation of these accelerators, as they offer significant performance and energy improvements over CPUs for a wide class of applications and are far more flexible than fixed-function ASICs. However, FPGAs are difficult to program. Traditional programming models for reconfigurable logic use low-level hardware description languages like Verilog and VHDL, which have none of the productivity features of modern software languages but produce very efficient designs, and low-level software languages like C and OpenCL coupled with high-level synthesis (HLS) tools that typically produce designs that are far less efficient. Functional languages with parallel patterns are a better fit for hardware generation because they provide high-level abstractions to programmers with little experience in hardware design and avoid many of the problems faced when generating hardware from imperative languages. In this paper, we identify two important optimizations for using parallel patterns to generate efficient hardware: tiling and metapipelining. We present a general representation of tiled parallel patterns, and provide rules for automatically tiling patterns and generating metapipelines. We demonstrate experimentally that these optimizations result in speedups up to 39.4× on a set of benchmarks from the data analytics domain.},
 address = {New York, NY, USA},
 author = {Prabhakar, Raghu and Koeplinger, David and Brown, Kevin J. and Lee, HyoukJoong and De Sa, Christopher and Kozyrakis, Christos and Olukotun, Kunle},
 booktitle = {Proceedings of the 21st International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS)},
 doi = {10.1145/2872362.2872415},
 isbn = {9781450340915},
 keywords = {reconfigurable hardware, metapipelining, parallel patterns, hardware generation, tiling, FPGAs},
 location = {Atlanta, Georgia, USA},
 month = {April},
 numpages = {15},
 pages = {651–665},
 publisher = {Association for Computing Machinery},
 series = {ASPLOS '16},
 title = {Generating Configurable Hardware from Parallel Patterns},
 year = {2016}
}

