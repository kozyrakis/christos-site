@inproceedings{2021-case-hotos,
 abstract = {Multiplexing software threads onto hardware threads and serving interrupts, VM-exits, and system calls require frequent context switches, causing high overheads and significant kernel and application complexity. We argue that context switching is an idea whose time has come and gone, and propose eliminating it through a radically different hardware threading model targeted to solve software rather than hardware problems. The new model adds a large number of hardware threads to each physical core - making thread multiplexing unnecessary - and lets software manage them. The only state change directly triggered in hardware by system calls, exceptions, and asynchronous hardware events will be blocking and unblocking hardware threads. We also present ISA extensions to allow kernel and user software to exploit this new threading model. Developers can use these extensions to eliminate interrupts and implement fast I/O without polling, exception-less system and hypervisor calls, practical microkernels, simple distributed programming models, and untrusted but fast hypervisors. Finally, we suggest practical hardware implementations and discuss the hardware and software challenges toward realizing this novel approach.},
 address = {New York, NY, USA},
 author = {Humphries, Jack Tigar and Kaffes, Kostis and Mazières, David and Kozyrakis, Christos},
 booktitle = {Proceedings of the Workshop on Hot Topics in Operating Systems (HotOS)},
 doi = {10.1145/3458336.3465274},
 isbn = {9781450384384},
 location = {Ann Arbor, Michigan},
 month = {June},
 numpages = {9},
 pages = {17–25},
 publisher = {Association for Computing Machinery},
 series = {HotOS '21},
 title = {A Case against (Most) Context Switches},
 year = {2021}
}

