@article{2022-rail-tos,
 abstract = {Flash-based storage is replacing disk for an increasing number of data center applications, providing orders of magnitude higher throughput and lower average latency. However, applications also require predictable storage latency. Existing Flash devices fail to provide low tail read latency in the presence of write operations. We propose two novel techniques to address SSD read tail latency, including Redundant Array of Independent LUNs (RAIL) which avoids serialization of reads behind user writes as well as latency-aware hot-cold separation (HC) which improves write throughput while maintaining low tail latency. RAIL leverages the internal parallelism of modern Flash devices and allocates data and parity pages to avoid reads getting stuck behind writes. We implement RAIL in the Linux Kernel as part of the LightNVM Flash translation layer and show that it can reduce read tail latency by 7Ã— at the 99.99th percentile, while reducing relative bandwidth by only 33%.},
 address = {New York, NY, USA},
 articleno = {5},
 author = {Litz, Heiner and Gonzalez, Javier and Klimovic, Ana and Kozyrakis, Christos},
 doi = {10.1145/3465406},
 issn = {1553-3077},
 issue_date = {February 2022},
 journal = {ACM Transactions on Storage},
 keywords = {LightNVM, Linux, SSD, OpenChannel},
 month = {February},
 number = {1},
 numpages = {21},
 publisher = {Association for Computing Machinery},
 title = {RAIL: Predictable, Low Tail Latency for NVMe Flash},
 volume = {18},
 year = {2022}
}

