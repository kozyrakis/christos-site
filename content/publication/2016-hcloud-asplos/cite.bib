@inproceedings{2016-hcloud-asplos,
 abstract = {Cloud computing promises flexibility and high performance for users and cost efficiency for operators. To achieve this, cloud providers offer instances of different sizes, both as long-term reservations and short-term, on-demand allocations. Unfortunately, determining the best provisioning strategy is a complex, multi-dimensional problem that depends on the load fluctuation and duration of incoming jobs, and the performance unpredictability and cost of resources. We first compare the two main provisioning strategies (reserved and on-demand resources) on Google Compute Engine (GCE) using three representative workload scenarios with batch and latency-critical applications. We show that either approach is suboptimal for performance or cost. We then present HCloud, a hybrid provisioning system that uses both reserved and on-demand resources. HCloud determines which jobs should be mapped to reserved versus on-demand resources based on overall load, and resource unpredictability. It also determines the optimal instance size an application needs to satisfy its Quality of Service (QoS) constraints. We demonstrate that hybrid configurations improve performance by 2.1x compared to fully on-demand provisioning, and reduce cost by 46% compared to fully reserved systems. We also show that hybrid strategies are robust to variation in system and job parameters, such as cost and system load.},
 address = {New York, NY, USA},
 author = {Delimitrou, Christina and Kozyrakis, Christos},
 booktitle = {Proceedings of the 21st International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS)},
 doi = {10.1145/2872362.2872365},
 isbn = {9781450340915},
 keywords = {datacenter, cloud computing, latency, hybrid, resource efficiency, QoS, provisioning},
 location = {Atlanta, Georgia, USA},
 month = {April},
 numpages = {16},
 pages = {473â€“488},
 publisher = {Association for Computing Machinery},
 series = {ASPLOS '16},
 title = {HCloud: Resource-Efficient Provisioning in Shared Cloud Systems},
 year = {2016}
}

