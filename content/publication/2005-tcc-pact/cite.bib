@inproceedings{2005-tcc-pact,
 abstract = {Transactional Coherence and Consistency (TCC) is a novel coherence scheme for shared memory multiprocessors that uses programmer-defined transactions as the fundamental unit of parallel work, synchronization, coherence, and consistency. TCC has the potential to simplify parallel program development and optimization by providing a smooth transition from sequential to parallel programs. In this paper, we study the implementation of TCC on chip-multiprocessors (CMPs). We explore design alternatives such as the granularity of state tracking, doublebuffering, and write-update and write-invalidate protocols. Furthermore, we characterize the performance of TCC in comparison to conventional snoopy cache coherence (SCC) using parallel applications optimized for each scheme. We conclude that the two coherence schemes perform similarly, with each scheme having a slight advantage for some applications. The bandwidth requirements of TCC are slightly higher but well within the capabilities of CMP systems. Also, we find that overflow of speculative state can be effectively handled by a simple victim cache. Our results suggest TCC can provide its programming advantages without compromising the performance expected from well-tuned parallel applications.},
 address = {USA},
 author = {McDonald, Austen and Chung, JaeWoong and Chafi, Hassan and Minh, Chi Cao and Carlstrom, Brian D. and Hammond, Lance and Kozyrakis, Christos and Olukotun, Kunle},
 booktitle = {Proceedings of the 14th International Conference on Parallel Architectures and Compilation Techniques (PACT) },
 doi = {10.1109/PACT.2005.11},
 isbn = {076952429X},
 month = {September},
 numpages = {12},
 pages = {63â€“74},
 publisher = {IEEE Computer Society},
 series = {PACT '05},
 title = {Characterization of TCC on Chip-Multiprocessors},
 year = {2005}
}

