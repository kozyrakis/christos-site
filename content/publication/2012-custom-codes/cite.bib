@inproceedings{2012-custom-codes,
 abstract = {This paper presents an interesting system-level co-design and co-verification case study for a non-trivial design where multiple high-performing x86 processors and custom hardware were connected through a coherent interconnection fabric. In functional verification of such a system, we used a processor bus functional model (BFM) to combine native software execution with a cycle-accurate interconnect simulator and an HDL simulator. However, we found that significant extensions need to be made to the conventional BFM methodology in order to capture various data-race cases in simulation, which eventually happen in modern multi-processor systems. Especially essential were faithful implementations of the memory consistency model and cache coherence protocol, as well as timing randomization. We demonstrate how such a co-simulation environment can be constructed from existing tools and software. Lessons from our study can similarly be applied to design and verification of other tightly-coupled systems.},
 address = {New York, NY, USA},
 author = {Hong, Sungpack and Oguntebi, Tayo and Casper, Jared and Bronson, Nathan and Kozyrakis, Christos and Olukotun, Kunle},
 booktitle = {Proceedings of the 8th IEEE/ACM/IFIP International Conference on Hardware/Software Codesign and System Synthesis (CODES+ISSS)},
 doi = {10.1145/2380445.2380524},
 isbn = {9781450314268},
 keywords = {co-simulation, bus functional model, fpga prototyping, transactional memory, co-verification},
 location = {Tampere, Finland},
 month = {October},
 numpages = {8},
 pages = {513â€“520},
 publisher = {Association for Computing Machinery},
 series = {CODES+ISSS '12},
 title = {A Case of System-Level Hardware/Software Co-Design and Co-Verification of a Commodity Multi-Processor System with Custom Hardware},
 year = {2012}
}

