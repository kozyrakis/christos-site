@inproceedings{2006-testtm-pact,
 abstract = {Transactional memory is an attractive design concept for scalable multiprocessors because it offers efficient lock-free synchronization and greatly simplifies parallel software. Given the subtle issues involved with concurrency and atomicity, however, it is important that transactional memory systems be carefully designed and aggressively tested to ensure their correctness. In this paper, we propose an axiomatic framework to model the formal specification of a realistic transactional memory system which may contain a mix of transactional and non-transactional operations. Using this framework and extensions to analysis algorithms originally developed for checking traditional memory consistency, we show that the widely practiced pseudo-random testing methodology can be effectively applied to transactional memory systems. Our testing methodology was successful in finding previously unknown bugs in the implementation of TCC, a transactional memory system. We study two flavors of the underlying analysis algorithm, one incomplete and the other complete, and show that the complete algorithm while being theoretically intractable is very efficient in practice.},
 address = {New York, NY, USA},
 author = {Manovit, Chaiyasit and Hangal, Sudheendra and Chafi, Hassan and McDonald, Austen and Kozyrakis, Christos and Olukotun, Kunle},
 booktitle = {Proceedings of the 15th International Conference on Parallel Architectures and Compilation Techniques (PACT)},
 doi = {10.1145/1152154.1152177},
 isbn = {159593264X},
 keywords = {transactional memory, testing, verification, specification},
 location = {Seattle, Washington, USA},
 month = {September},
 numpages = {10},
 pages = {134â€“143},
 publisher = {Association for Computing Machinery},
 series = {PACT '06},
 title = {Testing Implementations of Transactional Memory},
 year = {2006}
}

